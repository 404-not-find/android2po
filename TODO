Refactor the way we output strings. It'd prefer to see all actions logged
similar to how compress does:
    [mkdir] ../locale
    ...

Option to ignore fuzzy strings on import.

Path names specified in the config file are currently not relative to the
config directory. That's really a must.

I'm not quite happy with the config file approach yet. In particular,
upcoming options will require us to do validation, and we do not want
to duplicate validation between config file and options.
	- Possibly we can use the argparse facilities to validate our config.
	- argparse has a mechanism to read arguments from a file. That would
	  be good enough, except for the path-being-relative-to-config-dir
	  issue.
	- http://code.google.com/p/argparse/issues/detail?id=35

Options we would like to support:
	- messages to ignore
	- ability to pull .po header fields into messages
	- specify a gettext domain to use
	- specify the gettext directory layout, based on the domain:
		* domain-de.po
		* domain/de.po
		* de/domain.po
		* de/LC_MESSAGES/domain.po

The cmdline interface doesn't necessarily need tests, but our config
file loading does.

We need to write about the config file and it's options in the docs.

Support "values-en-rUS-finger"-style resource directories. We could do
this by adding a comment to each string indicating the source directory
and/or file (allowing us to handle files like, say, arrays.xml as well).
"import" can then use those comments to properly restore the strings in
the correct locations.

Support <plurals>/getQuantityString(). There seems to be a lack of
documentation on the subject, but initial testing seems to indicate that
only the following quantities are supported: zero, one, two, other. This
would indeed simplify the plurals definition we'd have to generate for
the .po files we export. Import would be more though, since we wouldn't
be able to support all types of plurals that gettext supports. Also, we
need to parse the plural definition in gettext files, which might be hard.
Another thing to consider in this respect is the "name" attribute on each
plural form (in addition to the group name) - Android allows it, but does
it have any effect?
See also:
	http://translate.sourceforge.net/wiki/guide/translation/plurals

More explicitly handle empty strings, like print a warning that they
will not be included on export; on import, we might want to include
them. We could also put in warning comments in the generated file as
the tool Google users internally seems to do, e.g. something like:
 <!-- translation not found: %resource-name% -->

Android's builtin stuff uses xliff tags to give information about variables
in strings; we don't support that yet, because we don't support namespaces.
Note that this might have an effect on whitespace handling also, since
(seemingly, check again) localized XML of Android's own apps, which are
clearly generated by a tool, use "..." to wrap around the total string,
including the xliff tags, while for strings that contain normal html tags it
uses the same approach as we do - wrapping around each block of text between
the tags (see the Browser app for an example).

Android's Settings app uses <skip /> tags in it's language-specific XML
string files. Find out what that means, and if we need to support it.

Add a command line option to enable a always quote mode, emulating the
behavior of what seems to be an converter Google uses internally, which
quotes all strings, regardless if they contain any content that would benefit
from quoting.

Android allows a string to reference another resource, i.e.:
	<string name="app_name">@string/app_name</string>
	<string name="notify_title_generic">@string/app_name</string>
Should be handle this in a specific way, like, say, not even bothering to
export those kinds of strings?