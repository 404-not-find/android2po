The --verbose option currently doesn't do a lot. We could output more
diagnostics, for example if and how many strings were ignored etc.

Add some kind of variation on the init command that would automatically
install a config file if it doesn't exist. Maybe we could to this if init
is called without any .po files existing yet, and without a specific
language being requested.

Options we would like to support:
	- ability to pull .po header fields into messages
	- specify a gettext domain to use
	- specify the gettext directory layout, based on the domain:
		* domain-de.po
		* domain/de.po
		* de/domain.po
		* de/LC_MESSAGES/domain.po
   - option to emulate "always quote" mode, emulating the behavior of what
	  seems to be an converter Google uses internally, which quotes all
	  strings, regardless if they contain any content that would benefit
	  from quoting.
	- option to automatically ignore messages that only contain a variable
	  reference, like  <string name="app_name">@string/app_name</string>

There are large area of code that we currently don't test; mostly the
whole environment handling, the way the config file is detected, it's
interaction with the arguments passed on the command line; how the
list of languages read etc.

Support "values-en-rUS-finger"-style resource directories. We could do
this by adding a comment to each string indicating the source directory
and/or file (allowing us to handle files like, say, arrays.xml as well).
"import" can then use those comments to properly restore the strings in
the correct locations.

Support <plurals>/getQuantityString(). There seems to be a lack of
documentation on the subject, but initial testing seems to indicate that
only the following quantities are supported: zero, one, two, other. This
would indeed simplify the plurals definition we'd have to generate for
the .po files we export. Import would be more though, since we wouldn't
be able to support all types of plurals that gettext supports. Also, we
need to parse the plural definition in gettext files, which might be hard.
Another thing to consider in this respect is the "name" attribute on each
plural form (in addition to the group name) - Android allows it, but does
it have any effect?
See also:
	http://translate.sourceforge.net/wiki/guide/translation/plurals

More explicitly handle empty strings, like print a warning that they
will not be included on export; on import, we might want to include
them. We could also put in warning comments in the generated file as
the tool Google users internally seems to do, e.g. something like:
 <!-- translation not found: %resource-name% -->

Android's builtin stuff uses xliff tags to give information about variables
in strings; we don't support that yet, because we don't support namespaces.
Note that this might have an effect on whitespace handling also, since
(seemingly, check again) localized XML of Android's own apps, which are
clearly generated by a tool, use "..." to wrap around the total string,
including the xliff tags, while for strings that contain normal html tags it
uses the same approach as we do - wrapping around each block of text between
the tags (see the Browser app for an example).

Android's Settings app uses <skip /> tags in it's language-specific XML
string files. Find out what that means, and if we need to support it.